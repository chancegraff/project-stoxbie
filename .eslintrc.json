{
    "env": {
        "browser": true,
        "es2020": true
    },
    "extends": [
        "standard",
        "eslint:recommended",
        "plugin:react/recommended",
        "plugin:react-hooks/recommended",
        "plugin:@typescript-eslint/recommended"
    ],
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "ecmaFeatures": {
            "jsx": true
        },
        "ecmaVersion": 11,
        "sourceType": "module"
    },
    "plugins": [
        "standard",
        "react",
        "react-hooks",
        "@typescript-eslint",
        "simple-import-sort",
        "wrap-params"
    ],
    "settings": {
        "react": {
            "version": "detect"
        }
    },
    "ignorePatterns": [
        "node_modules",
        "eslint"
    ],
    "rules": {
        "accessor-pairs": "error",
        "array-bracket-newline": [
            "error",
            {
                "minItems": 2
            }
        ],
        "array-bracket-spacing": [
            "error",
            "always"
        ],
        "array-callback-return": "error",
        "array-element-newline": [
            "error",
            "always"
        ],
        "arrow-body-style": [
            "error",
            "always"
        ],
        "arrow-parens": "error",
        "arrow-spacing": "error",
        "block-scoped-var": "error",
        "block-spacing": "error",
        "brace-style": [
            2,
            "allman"
        ],
        "callback-return": "error",
        "camelcase": "error",
        "capitalized-comments": "off",
        "class-methods-use-this": "error",
        "comma-dangle": [
            "error",
            "always-multiline"
        ],
        "comma-spacing": "error",
        "comma-style": "error",
        "complexity": "error",
        "computed-property-spacing": "error",
        "consistent-return": "off",
        "consistent-this": "error",
        "curly": "error",
        "default-case": "error",
        "default-param-last": "error",
        "dot-location": "error",
        "dot-notation": "error",
        "eol-last": "error",
        "eqeqeq": "error",
        "func-call-spacing": "error",
        "func-name-matching": "error",
        "func-names": "error",
        "func-style": "error",
        "function-call-argument-newline": [
            "error",
            "always"
        ],
        "function-paren-newline": [
            "error",
            {
                "minItems": 2
            }
        ],
        "generator-star-spacing": "error",
        "global-require": "error",
        "grouped-accessor-pairs": "error",
        "guard-for-in": "error",
        "handle-callback-err": "error",
        "id-blacklist": "error",
        "id-length": "error",
        "id-match": "error",
        "implicit-arrow-linebreak": "error",
        "indent": [
            "error",
            2,
            {
                "offsetTernaryExpressions": true
            }
        ],
        "indent-legacy": "off",
        "init-declarations": "error",
        "jsx-quotes": "error",
        "key-spacing": "error",
        "keyword-spacing": "error",
        "line-comment-position": "error",
        "linebreak-style": [
            "error",
            "unix"
        ],
        "lines-around-comment": "error",
        "lines-around-directive": "error",
        "lines-between-class-members": "error",
        "max-classes-per-file": "error",
        "max-depth": "error",
        "max-len": "off",
        "max-lines": "off",
        "max-lines-per-function": "off",
        "max-nested-callbacks": "error",
        "max-params": "error",
        "max-statements": "off",
        "max-statements-per-line": "error",
        "multiline-comment-style": "off",
        "multiline-ternary": [
            "error",
            "always"
        ],
        "new-cap": "error",
        "new-parens": "error",
        "newline-after-var": "error",
        "newline-before-return": "error",
        "newline-per-chained-call": "error",
        "no-alert": "error",
        "no-array-constructor": "error",
        "no-await-in-loop": "error",
        "no-bitwise": "error",
        "no-buffer-constructor": "error",
        "no-caller": "error",
        "no-catch-shadow": "error",
        "no-confusing-arrow": "off",
        "no-console": "error",
        "no-constructor-return": "error",
        "no-continue": "error",
        "no-div-regex": "error",
        "no-duplicate-imports": "error",
        "no-else-return": "error",
        "no-empty-function": "error",
        "no-eq-null": "error",
        "no-eval": "error",
        "no-extend-native": "error",
        "no-extra-bind": "error",
        "no-extra-label": "error",
        "no-extra-parens": [
            "error",
            "all",
            {
                "returnAssign": false,
                "nestedBinaryExpressions": false,
                "ignoreJSX": "multi-line"
            }
        ],
        "no-floating-decimal": "error",
        "no-implicit-coercion": "error",
        "no-implicit-globals": "error",
        "no-implied-eval": "error",
        "no-inline-comments": "error",
        "no-invalid-this": "error",
        "no-iterator": "error",
        "no-label-var": "error",
        "no-labels": "error",
        "no-lone-blocks": "error",
        "no-lonely-if": "error",
        "no-loop-func": "error",
        "no-magic-numbers": "off",
        "no-mixed-operators": "error",
        "no-mixed-requires": "error",
        "no-multi-assign": "error",
        "no-multi-spaces": "error",
        "no-multi-str": "error",
        "no-multiple-empty-lines": "error",
        "no-native-reassign": "error",
        "no-negated-condition": "error",
        "no-negated-in-lhs": "error",
        "no-nested-ternary": "error",
        "no-new": "error",
        "no-new-func": "error",
        "no-new-object": "error",
        "no-new-require": "error",
        "no-new-wrappers": "error",
        "no-octal-escape": "error",
        "no-param-reassign": "error",
        "no-path-concat": "error",
        "no-plusplus": "error",
        "no-process-env": "error",
        "no-process-exit": "error",
        "no-proto": "error",
        "no-restricted-globals": "error",
        "no-restricted-imports": "error",
        "no-restricted-modules": "error",
        "no-restricted-properties": "error",
        "no-restricted-syntax": "error",
        "no-return-assign": "error",
        "no-return-await": "error",
        "no-script-url": "error",
        "no-self-compare": "error",
        "no-sequences": "error",
        "no-shadow": "error",
        "no-spaced-func": "error",
        "no-sync": "error",
        "no-tabs": "error",
        "no-template-curly-in-string": "error",
        "no-ternary": "off",
        "no-throw-literal": "error",
        "no-trailing-spaces": "error",
        "no-undef-init": "error",
        "no-undefined": "off",
        "no-underscore-dangle": "error",
        "no-unmodified-loop-condition": "error",
        "no-unneeded-ternary": "error",
        "no-unused-expressions": "error",
        "no-use-before-define": "error",
        "no-useless-call": "error",
        "no-useless-computed-key": "error",
        "no-useless-concat": "error",
        "no-useless-constructor": "error",
        "no-useless-rename": "error",
        "no-useless-return": "error",
        "no-var": "error",
        "no-void": "error",
        "no-warning-comments": "error",
        "no-whitespace-before-property": "error",
        "nonblock-statement-body-position": "error",
        "object-curly-newline": [
            "error",
            {
                "ObjectExpression": {
                    "multiline": true,
                    "minProperties": 2
                },
                "ObjectPattern": {
                    "multiline": true,
                    "minProperties": 2
                },
                "ImportDeclaration": {
                    "multiline": true,
                    "minProperties": 2
                },
                "ExportDeclaration": {
                    "multiline": true,
                    "minProperties": 2
                }
            }
        ],
        "object-curly-spacing": "error",
        "object-property-newline": "error",
        "object-shorthand": "error",
        "one-var": "error",
        "one-var-declaration-per-line": "error",
        "operator-assignment": "error",
        "operator-linebreak": [
            "error",
            "after",
            {
                "overrides": {
                    "?": "before",
                    ":": "before"
                }
            }
        ],
        "padded-blocks": "error",
        "padding-line-between-statements": "error",
        "prefer-arrow-callback": "error",
        "prefer-const": "error",
        "prefer-destructuring": [
            "error",
            {
                "object": true,
                "array": true
            }
        ],
        "prefer-exponentiation-operator": "error",
        "prefer-named-capture-group": "error",
        "prefer-numeric-literals": "error",
        "prefer-object-spread": "error",
        "prefer-promise-reject-errors": "error",
        "prefer-reflect": "error",
        "prefer-regex-literals": "error",
        "prefer-rest-params": "error",
        "prefer-spread": "error",
        "prefer-template": "error",
        "quote-props": "error",
        "quotes": [
            "error",
            "double"
        ],
        "radix": "error",
        "require-atomic-updates": "error",
        "require-await": "error",
        "require-jsdoc": "error",
        "require-unicode-regexp": "off",
        "rest-spread-spacing": "error",
        "semi": [
            "error",
            "always"
        ],
        "semi-spacing": "error",
        "semi-style": "error",
        "sort-imports": "off",
        "sort-keys": "off",
        "sort-vars": "off",
        "space-before-blocks": "error",
        "space-before-function-paren": "error",
        "space-in-parens": "error",
        "space-infix-ops": "error",
        "space-unary-ops": "error",
        "spaced-comment": "error",
        "strict": "error",
        "switch-colon-spacing": "error",
        "symbol-description": "error",
        "template-curly-spacing": "error",
        "template-tag-spacing": "error",
        "unicode-bom": "error",
        "valid-jsdoc": "error",
        "vars-on-top": "error",
        "wrap-iife": "error",
        "wrap-regex": "error",
        "yield-star-spacing": "error",
        "yoda": "error",
        "@typescript-eslint/no-explicit-any": "off",
        "react/prop-types": 0,
        "react/display-name": 0,
        "react/jsx-closing-bracket-location": "error",
        "react/jsx-sort-props": [
            "error",
            {
                "callbacksLast": true,
                "shorthandFirst": true,
                "noSortAlphabetically": true,
                "reservedFirst": true
            }
        ],
        "react/jsx-wrap-multilines": [
            "error",
            {
                "declaration": "parens-new-line",
                "assignment": "parens-new-line",
                "return": "parens-new-line",
                "arrow": "parens-new-line",
                "condition": "ignore",
                "logical": "ignore",
                "prop": "parens-new-line"
            }
        ],
        "react/jsx-one-expression-per-line": "error",
        "react/jsx-no-duplicate-props": "error",
        "react/jsx-max-props-per-line": "error",
        "react/jsx-handler-names": [
            "error",
            {
                "eventHandlerPrefix": "handle",
                "eventHandlerPropPrefix": "handle",
                "checkLocalVariables": false
            }
        ],
        "react/jsx-fragments": "error",
        "react/jsx-first-prop-new-line": [
            "error",
            "multiline"
        ],
        "react/jsx-curly-newline": [
            "error",
            {
                "multiline": "require",
                "singleline": "forbid"
            }
        ],
        "react/boolean-prop-naming": "error",
        "react/jsx-boolean-value": [
            "error",
            "always"
        ],
        "wrap-params/destructured-objects": [
            "error",
            {
                "minProperties": 2
            }
        ],
        "wrap-params/wrap-params": [
            "error",
            {
                "minProperties": 2
            }
        ],
        "simple-import-sort/sort": [
            "error",
            {
                "groups": [
                    // Node.js builtins. You could also generate this regex if you use a `.js` config.
                    // For example: `^(${require("module").builtinModules.join("|")})(/|$)`
                    [
                        "^(assert|buffer|child_process|cluster|console|constants|crypto|dgram|dns|domain|events|fs|http|https|module|net|os|path|punycode|querystring|readline|repl|stream|string_decoder|sys|timers|tls|tty|url|util|vm|zlib|freelist|v8|process|async_hooks|http2|perf_hooks)(/.*|$)"
                    ],
                    // Packages. `react` related packages come first.
                    [
                        "^react",
                        "^@?\\w"
                    ],
                    // Side effect imports.
                    [
                        "^\\u0000"
                    ],
                    // Internal packages.
                    [
                        "^(services)(/.*|$)",
                        "^(templates)(/.*|$)",
                        "^(routes)(/.*|$)",
                        "^(views)(/.*|$)",
                        "^(components)(/.*|$)"
                    ],
                    // Parent imports. Put `..` last.
                    [
                        "^\\.\\.(?!/?$)",
                        "^\\.\\./?$"
                    ],
                    // Other relative imports. Put same-folder imports and `.` last.
                    [
                        "^\\./(?=.*/)(?!/?$)",
                        "^\\.(?!/?$)",
                        "^\\./?$"
                    ],
                    // Style imports.
                    [
                        "^.+\\.s?css$"
                    ]
                ]
            }
        ]
    }
}
